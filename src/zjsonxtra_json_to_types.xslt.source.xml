<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

  <xsl:output indent="no" method="text"/>
  <xsl:strip-spaces elements="*"/>
  <xsl:variable name="new_line">
    <xsl:text disable-output-escaping="yes">
</xsl:text>
  </xsl:variable>

  <xsl:template match="/">

    <xsl:variable name="content">
      <xsl:apply-templates select="*"/>
    </xsl:variable>

    <xsl:value-of select="$content/subTypes"/>
    <xsl:value-of select="$content/mainType"/>

    <xsl:choose>
      <xsl:when test="count(/array)=1">
        <xsl:value-of select="concat('DATA main_json TYPE tt_main.',$new_line)"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="concat('DATA main_json TYPE ty_main.',$new_line)"/>
      </xsl:otherwise>
    </xsl:choose>

  </xsl:template>


  <xsl:template match="array">

    <xsl:variable name="content">
    <xsl:apply-templates select="*[1]"/>
    </xsl:variable>

    <xsl:variable name="name">
      <xsl:call-template name="NAME">
        <xsl:with-param name="NAME" select="@name"/>
      </xsl:call-template>
    </xsl:variable>


    <subTypes>
      <xsl:value-of select="$content/subTypes"/>
    </subTypes>
    <mainType>
      <xsl:value-of select="$content/mainType"/>
      <xsl:value-of select="concat('TYPES tt_',$name,' TYPE STANDARD TABLE OF ty_',$name,' WITH EMPTY KEY.',$new_line)"/>
    </mainType>

  </xsl:template>


  <xsl:template match="object">

    <xsl:variable name="name">
      <xsl:call-template name="NAME">
        <xsl:with-param name="NAME" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <xsl:variable name="content">
      <xsl:apply-templates select="*"/>
    </xsl:variable>

    <subTypes>
      <xsl:for-each select="$content/subTypes">
        <xsl:value-of select="."/>
      </xsl:for-each>
    </subTypes>
    <mainType>
      <xsl:value-of select="concat('TYPES BEGIN OF ty_',$name,'.',$new_line)"/>
      <xsl:for-each select="$content/mainType">
        <xsl:value-of select="."/>
      </xsl:for-each>
      <xsl:value-of select="concat('TYPES END OF ty_',$name,'.',$new_line)"/>
    </mainType>

  </xsl:template>


  <xsl:template match="num">

    <xsl:variable name="name">
      <xsl:call-template name="NAME">
        <xsl:with-param name="NAME" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <mainType>
      <xsl:value-of select="concat('TYPES ty_',$name,' TYPE decfloat34.',$new_line)"/>
    </mainType>

  </xsl:template>


  <xsl:template match="str">

    <xsl:variable name="name">
      <xsl:call-template name="NAME">
        <xsl:with-param name="NAME" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <mainType>
      <xsl:value-of select="concat('TYPES ty_',$name,' TYPE string.',$new_line)"/>
    </mainType>

  </xsl:template>


  <xsl:template match="bool">

    <xsl:variable name="name">
      <xsl:call-template name="NAME">
        <xsl:with-param name="NAME" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <mainType>
      <xsl:value-of select="concat('TYPES ty_',$name,' TYPE abap_bool.',$new_line)"/>
    </mainType>

  </xsl:template>


  <xsl:template match="null">

    <xsl:variable name="name">
      <xsl:call-template name="NAME">
        <xsl:with-param name="NAME" select="@name"/>
      </xsl:call-template>
    </xsl:variable>

    <mainType>
      <xsl:value-of select="concat('TYPES ty_',$name,' TYPE string.',$new_line)"/>
    </mainType>

  </xsl:template>


  <xsl:template name="NAME">

    <xsl:param name="NAME"/>

    <xsl:choose>
      <xsl:when test="string($NAME)!=''">
        <xsl:value-of select="$NAME"/>
      </xsl:when>
      <xsl:when test="string($NAME/../@name)!=''">
        <xsl:value-of select="$NAME/../@name"/>
      </xsl:when>
      <xsl:otherwise>main</xsl:otherwise>
    </xsl:choose>

  </xsl:template>

</xsl:stylesheet>
